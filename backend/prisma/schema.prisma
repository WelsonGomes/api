
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELOS DAS TABELAS DE USO PRINCIPAL DE GERENCIAMENTO
model tbestado {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(100) @unique
  uf String @db.VarChar(2) @unique
  pais String @db.VarChar(100)
  cidade tbcidade[]
  cliente tbcliente[]
  endereco tbendereco[]
}

model tbcidade {
  id Int @id @default(autoincrement())
  nome String @db.VarChar(100)
  estadoid Int
  estado tbestado @relation(fields: [estadoid], references: [id])
  codigoibge Int
  cidade tbcliente[]
  endereco tbendereco[]

  @@unique([nome, estadoid])
}

model tbcliente {
  id Int @id @default(autoincrement())
  cnpjcpf String @unique @db.VarChar(14)
  razaosocial String @db.VarChar(200)
  fantasia String? @db.VarChar(200)
  datacriacao DateTime
  responsavel String? @db.VarChar(100)
  situacao Int 
  email String @db.VarChar(100)
  telefone String? @db.VarChar(10)
  celular String? @db.VarChar(11)
  estadoid Int
  estado tbestado @relation(fields: [estadoid], references: [id])
  cidadeid Int
  cidade tbcidade @relation(fields: [cidadeid], references: [id])
  cep String? @db.VarChar(8)
  logradouro String? @db.VarChar(100)
  numero Int?
  bairro String? @db.VarChar(100)
  complemento String? @db.VarChar(100)
  datacadastro DateTime @default(now())
  contrato tbcontrato[]
}

model tbcontrato {
  id Int @id @default(autoincrement())
  contrato Int @unique
  clienteid Int
  cliente tbcliente @relation(fields: [clienteid],references: [id])
  dtinicio DateTime
  qtdmeses Int
  dttermino DateTime
  valor Decimal @db.Decimal(17,2)
  valormensal Decimal @db.Decimal(17,2)
  responsavel String @db.VarChar(100)
  dtcadastro DateTime @default(now())
  cedente String
  cessionaria String
  descricao String
  status Int
  dtassinatura DateTime
  dtatualizacao DateTime?
}

//MODELOS DAS TABELAS REFERENTE AS PESSOAS

model tbtipofisico {
  id Int @id @default(autoincrement())
  descricao String @db.VarChar(50)
  pessoa tbpessoa[]
}

model tbnivelatividade {
  id Int @id @default(autoincrement())
  descricao String @db.VarChar(50)
  pessoa tbpessoa[]
}

model tbobjetivo {
  id Int @id @default(autoincrement())
  descricao String @db.VarChar(50)
  pessoa tbpessoa[]
}

model tbcontato {
  id Int @id @default(autoincrement())
  pessoaid Int
  pessoa tbpessoa @relation(fields: [pessoaid], references: [id])
  telefone String @db.VarChar(10)
  celular String @db.VarChar(11)
  email String @db.VarChar(100) @unique
}

model tbendereco {
  id Int @id @default(autoincrement())
  pessoaid Int
  pessoa tbpessoa @relation(fields: [pessoaid], references: [id])
  cep String @db.VarChar(8)
  rua String
  numero String?
  cidadeid Int
  cidade tbcidade @relation(fields: [cidadeid], references: [id])
  bairro String
  estadoid Int
  estado tbestado @relation(fields: [estadoid], references: [id])
  complemento String
}

model tbpessoa {
  id Int @id @default(autoincrement())
  codigo Int
  nome String @db.VarChar(50)
  sobrenome String @db.VarChar(50)
  cpf String @db.VarChar(11) @unique
  datanascimento DateTime
  sexo Int
  tipofisicoid Int
  tipofisico tbtipofisico @relation(fields: [tipofisicoid], references: [id])
  nivelatividadeid Int
  nivelatividade tbnivelatividade @relation(fields: [nivelatividadeid], references: [id])
  objetivoid Int
  objetivo tbobjetivo @relation(fields: [objetivoid], references: [id])
  situacao Int 
  contato tbcontato[]
  endereco tbendereco[]
}